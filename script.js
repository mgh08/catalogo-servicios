(async ()=>{
  const $ = (s,ctx=document)=>ctx.querySelector(s);
  const $$ = (s,ctx=document)=>Array.from(ctx.querySelectorAll(s));
  async function loadJSON(path){ const res = await fetch(path, {cache:'no-store'}); if(!res.ok) throw new Error('No se pudo cargar '+path); return await res.json(); }
  function numCOP(v){ try{ return new Intl.NumberFormat('es-CO',{style:'currency',currency:'COP',maximumFractionDigits:0}).format(v);}catch(_){ return '$'+v } }
  let services = []; const state = { q:'', cat:'Todos' };
  function renderCategories(cats){ const bar=$('#cats'); const all=['Todos',...cats]; bar.innerHTML = all.map(c=>`<button class="chip ${state.cat===c?'active':''}" data-cat="${c}" role="tab" aria-selected="${state.cat===c}">${c}</button>`).join(''); }
  function match(s){ if(state.cat && state.cat!=='Todos' && s.category!==state.cat) return false; if(state.q){ const q=state.q.toLowerCase(); const hay=[s.name,s.description,s.category,s.duration].filter(Boolean).join(' ').toLowerCase(); return hay.includes(q);} return true; }
  function renderGrid(){ const grid=$('#grid'); const filtered=services.filter(match); if(!filtered.length){ grid.innerHTML='<p class="muted">No hay servicios que coincidan con tu búsqueda.</p>'; return; } grid.innerHTML = filtered.map(s=>`<article class='card'>${s.image?`<img src='${s.image}' alt='${s.name}' loading='lazy'>`:`<div class='img' aria-hidden='true'></div>`}<div class='body'><h3 class='title'>${s.name}</h3>${s.category?`<span class='tag'>${s.category}</span>`:''}<div class='meta'>${s.duration?`<span class='muted'>Duración: ${s.duration}</span>`:'<span></span>'}${s.price?`<span class='price'>${numCOP(s.price)}</span>`:''}</div>${s.description?`<p class='muted'>${s.description}</p>`:''}</div></article>`).join(''); }
  try{ const [cfg, data] = await Promise.all([loadJSON('config.json'), loadJSON('services.json')]); services=data; $('#brand').textContent=cfg.title||'Catálogo'; document.querySelector('[data-bind="brand"]').textContent=cfg.title||'Tu Marca'; $('#tagline').textContent=cfg.tagline||''; const wsp=$('#cta-wsp'); if(cfg.whatsapp){ const num=String(cfg.whatsapp).replace(/[^0-9]/g,''); const msg=cfg.whatsapp_msg?`?text=${encodeURIComponent(cfg.whatsapp_msg)}`:''; wsp.href=`https://wa.me/${num}${msg}`; } else { wsp.style.display='none'; } const ig=$('#cta-ig'); if(cfg.instagram){ ig.href=cfg.instagram; } else { ig.style.display='none'; } const cats=[...new Set(services.map(s=>s.category).filter(Boolean))].sort(); renderCategories(cats); renderGrid(); }catch(e){ console.error(e); $('#grid').innerHTML='<p class="muted">Error cargando el catálogo.</p>'; }
  document.addEventListener('input', (ev)=>{ if(ev.target.id==='search'){ state.q=ev.target.value.trim(); renderGrid(); } });
  document.addEventListener('click', (ev)=>{ const btn=ev.target.closest('.chip'); if(btn){ state.cat=btn.dataset.cat; $$('.chip').forEach(b=>b.classList.toggle('active', b===btn)); renderGrid(); } });
})();